swagger: "2.0"

info:
  title: Face Recognition Server
  version: "1.0"

paths:
  /face/classify:
    post:
      summary: Classify Face
      description: Generates a greeting message from a post, such as curl -F file=@sample.png http://localhost:5000/face/classify
      operationId: face_rec.classify
      consumes:
        - multipart/form-data
      produces:
        - text/json;
      responses:
        200:
          description: classification response
          schema:
            type: string
          examples:
            "text/json": "{name: 'John'}"
      parameters:
        - name: file
          in: formData
          description: Image file to classify.
          required: true
          type: file
  
  /face/add:
    post:
      summary: Add Face
      description: Generates a greeting message from a post, such as curl -F file=@sample.png http://localhost:5000/face/add
      operationId: face_rec.add
      consumes:
        - multipart/form-data
      produces:
        - text/json;
      responses:
        200:
          description: add response
          schema:
            type: string
          examples:
            "text/json": "{result: 'Success', message: 'File uploaded!'}"
      parameters:
        - name: file
          in: formData
          description: Image or video file.
          required: true
          type: file
          x-mimetype: video/mp4
        - name: personName
          in: query
          description: Person name.
          required: true
          type: string
        - name: rotate
          in: query
          description: Rotate degree.
          required: false
          type: string

  /face/train:
    get:
      summary: Train Model
      description: Generates a greeting message from a get, such as curl -F file=@sample.png http://localhost:5000/face/train
      operationId: face_rec.train
      produces:
        - text/json;
      responses:
        200:
          description: train model response
          schema:
            type: string
          examples:
            "text/json": "{result: 'Success', message: 'Model will be trained!'}"

  /face/restart:
    get:
      summary: Restart Model
      description: Generates a greeting message from a get, such as curl -F file=@sample.png http://localhost:5000/face/restart
      operationId: face_rec.restart
      produces:
        - text/json;
      responses:
        200:
          description: restart response
          schema:
            type: string
          examples:
            "text/json": "{result: 'Success', message: 'Model restarted!'}"